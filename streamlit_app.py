# streamlit_app.py

import streamlit as st
from openai import OpenAI
from parse_hh import get_text_from_hh

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–ª—é—á–∞
client = OpenAI(api_key=st.secrets["OPENAI_API_KEY"])

st.set_page_config(page_title="–ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—é–º–µ –∏ –≤–∞–∫–∞–Ω—Å–∏–∏", layout="wide")
st.title("üîç –ò–ò-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è –ø—Ä–µ—Å–∫–æ—Ä–∏–Ω–≥–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤")

st.markdown("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–µ–∑—é–º–µ –∏ –≤–∞–∫–∞–Ω—Å–∏—é —Å hh.ru")

resume_url = st.text_input("–°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–∑—é–º–µ:")
vacancy_url = st.text_input("–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é:")

if st.button("–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å"):
    try:
        resume_text = get_text_from_hh(resume_url)
        vacancy_text = get_text_from_hh(vacancy_url)

        with st.spinner("‚öôÔ∏è –û–±—Ä–∞—â–µ–Ω–∏–µ –∫ OpenAI..."):
            response = client.chat.completions.create(
                model="gpt-4",
                messages=[
                    {
                        "role": "system",
                        "content": (
                            "–¢—ã –æ–ø—ã—Ç–Ω—ã–π HR-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –°—Ä–∞–≤–Ω–∏ —Ä–µ–∑—é–º–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ —Å –≤–∞–∫–∞–Ω—Å–∏–µ–π –∏ –æ—Ü–µ–Ω–∏:\n"
                            "- –ù–∞—Å–∫–æ–ª—å–∫–æ –∫–∞–Ω–¥–∏–¥–∞—Ç –ø–æ–¥—Ö–æ–¥–∏—Ç –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é (–ø–æ 10-–±–∞–ª—å–Ω–æ–π —à–∫–∞–ª–µ)\n"
                            "- –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ –∫–ª—é—á–µ–≤—ã–º –Ω–∞–≤—ã–∫–∞–º\n"
                            "- –ï—Å—Ç—å –ª–∏ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è\n"
                            "- –î–∞–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—é"
                        )
                    },
                    {"role": "user", "content": f"–í–∞–∫–∞–Ω—Å–∏—è:\n{vacancy_text}"},
                    {"role": "user", "content": f"–†–µ–∑—é–º–µ:\n{resume_text}"}
                ]
            )

            st.success("‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω!")
            st.markdown("### üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:")
            st.write(response.choices[0].message.content)

    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞: {str(e)}")